absFunctionDescription=Function that return the absolute value
absFunctionName=Return the absolute value
absFunctionParam0=Value to be calculate: Value base to be calculate the absolute value
accessDenied=Access Denied
acosFunctionDescription=Function that return the arc cosine value
acosFunctionName=Return the arc cosine value
acosFunctionParam0=Value to calculate: Value base to calculate the arc cosine. Value should be between 0.0 and 1.0
addContent=Add content?
addContentToFile=Add content to file
addDoubleDescription=Function that returns the value added from params
addDoubleName=Return the values added
addDoubleParam0=Variables to add: Long values to add
addFunctionDescription=Function that returns the value added from params
addFunctionName=Return the values added
addFunctionParam0=Variables to add
addLongDescription=Function that returns the values added from params
addLongName=Return the values added
addLongParam0=Variables to add: Long values to add
addressOfTheServerBlockDocumentation=http://cronapi-docs.readthedocs.io/pt/develop/cronapi.io/server/${nameMethod}.html
addText=Text: Text to be added. Example: "TextToBeAddedIntoFile".
all=All
app_json=JSON
appendDescription=Function that concatenate strings and return a concatenated string
appendName=Concatenate string
appendParam0=String to concat
appendParam1= Strings to concatenate
applicationClassesFolder=Application classes folder
applicationClassesFolderDescription=Function to return the path of the application classes folder.
applicationFolder=Application folder
applicationRecycleFolder=Application recycle folder
applicationTemporaryFolder=Temporary folder
asinFunctionDescription=Function that return the arcsine value
asinFunctionName=Return the arcsine value
asinFunctionParam0=Value to calculate: Value base to calculate the arcsine
atanFunctionDescription=Function that return the arc tangent value
atanFunctionName=Return the arc tangent value
atanFunctionParam0=Value to calculate: Value base to calculate the arc tangent
attachments=Attachments
attribute=Attribute
audit=Log Audit
auditCategory=Category: Audit category. Ex: Trace, Blockly, Entity, Query etc
auditCommand=Command: Excuted Command. Ex: CreateOrder
auditData=Data: Audit Data. Ex: object, text etc
auditType=Type: Audit Type. Ex: Blockly Name
base64ToText=Base64 to text
beginTransaction=Begin Transaction
beginTransactionDescription=Function to begin transaction.
blocklyNotFound=Blockly not found
BOOLEAN=Boolean
BYTEARRAY=Bytes
callBackStatements=Commands: Commands to be executed in each read
callBlockly= Call blockly
callBlocklyNoReturnDescription=Function that call a block without return
callBlocklyNoReturnName=Call block no return
callBlocklyNoReturnParam0=Block name
callBlocklyNoReturnParam1=Parameters
callClienteFunctionDescription=Function that invoke a command on client side application
callClienteFunctionName=Call cliente function
callClienteFunctionParam0=Command: Comand to be invoked on client
callClienteFunctionParam1=Parameters: Parameters to be attached on function call
canReadyFile=Can read file?
canWriteFile=Can you write file?
CategoryType.AUTHENTICATION=Authentication
CategoryType.CHART=Chart
CategoryType.COLOR=Color
CategoryType.CONVERSION=Conversion
CategoryType.DATABASE=Database
CategoryType.DATETIME=Datetime
CategoryType.EMAIL=Email
CategoryType.FRONTEND=Frontend
CategoryType.FTP=FTP
CategoryType.GRID=Grid
CategoryType.IO=IO
CategoryType.JSON=Json
CategoryType.JSONORMAP=Json and Map
CategoryType.LIST=Lists
CategoryType.LOGIC=Logic
CategoryType.LOOP=Loops
CategoryType.MAP=Maps
CategoryType.MATH=Math
CategoryType.OBJECT=Object
CategoryType.OTHER=Other
CategoryType.PRINT=Print
CategoryType.REGEX=Regular Expression
CategoryType.SCREEN=Form
CategoryType.SEMAPHORE=Semaphore
CategoryType.SOCIAL=Social
CategoryType.TEXT=Text
CategoryType.TREE=Tree
CategoryType.UTIL=Utils
CategoryType.VALIDATION=Validate
CategoryType.XML=XML
ceilFunctionDescription=Function that return the smallest round value
ceilFunctionName=Return the smallest round value
ceilFunctionParam0=Value to round: Value base to round down
changeFTPFolder=Change FTP folder
changeToParentFTPFolder=Change to parent FTP folder
charset=Charset
classNameWithMethod= Block: Block name
clearFile=Clear file
closeFile=Close file
closeFTPConnection=Close FTP connection
cmd=Command
cnpj=CNPJ
commandFtp=FTP command
commitTransaction=Commit Transaction
commitTransactionDescription=Function to commit transaction.
compressToZipDescription=Function that compress a Var to Zip
compressToZipName=Compress a byte array
compressToZipParam0=Compress variable: Var to be compressed
CONFIG=Config
content=Content
contentInAscii=ASCII Content: Content in ascii
contentInBase64=Content: Base64 Content
contentInTextBinary=Content: Binary text content
contentOfFile=File Contents
contentType=Content type
convert=Convert
convertArrayToList=Convert array to list
convertBase64ToBinary=Convert base64 to binary
convertDecToHex=Convert to hexadecimal
convertDescription=Converts values between different types
convertHexadecimalToInt=Convert hexadecimal to integer
convertLongToDate=Convert milliseconds to date
convertLongToDateDescription=Function that convert a milliseconds(Long) to date
convertStringToDate=Convert text to date
convertStringToDateWithTimeZone=Convert text to date with Time Zone
convertStringToJs=Convert text to escaping text in javascript
convertTo=to
convertToAscii=Convert char to ASCII code
convertToBytes=Conversion to bytes
convertToBytesDescription= Convert a text to bytes[]
convertToBytesParam0= Text
convertToDouble=Convert to Double
convertToLong=Convert to long
convertToString=Convert to text
convertValue=value
cookieContainer=Headers: Map who will be added on headers. Example: Token.
copyFile=Copy file
copyTextToTransferAreaDescription=Function that copy text to transfer area
copyTextToTransferAreaName=Copy text to transfer area
copyTextToTransferAreaParam0=Copy to transfer: Variable to be copy into transfer area
copyToRecipient=Copy: Copy to recipient (cc)
cosFunctionDescription=Function that return the cosine value
cosFunctionName=Return the cosine value
cosFunctionParam0=Value to calculate: Value base to calculate the cosine
couldNotReadContentsFile=Could not read entire contents of file
cpf=CPF
createChartDescription=Function that create a chart
createChartId=Id: Chart id (canvas)
createChartLegends=Legends: Chart legends
createChartName=Create chart
createChartOptions: Options=Chart options
createChartSeries=Chart serie(s): Set of chart series
createChartType=Chart type: Chart type to be created
createDownloadURL=Create Download URL
createDownloadURLDescription=Function to create a download url from a phisical file path
createDownloadURLParam=File: Full file path
createExceptionDescription=Function that create a exception
createExceptionName=Create a exception
createExceptionParam0=Message:Message of exception
createFolder=Create folder
createNewFile=Create new file
createNewFTPFolder=Create new FTP folder
createObjectJson=Create Json object
createObjectMap=Create Map Object
createObjectMapDescription=Function that create a map object
createObjectMapName=Create map object
createObjectWithMapDescription=Function that create a map object
createObjectWithMapName=Create a map object
createObjectWithMapParam0=Values: Variables to append on creation object
createRecipientsAddress=Create Recipients
createSerieDescription=Function that create a chart serie
createSerieName=Create serie
createSerieParamData=Data: Serie data
createSerieParamName=Serie name
createSerieParamOptions=Options: Serie Options
datasource=Datasource
DATASOURCE_INVALID_QUERY=JPQL instruction was invalid: {0}
datasourceClose=Close datasource
datasourceExecuteJQPLQuery=Execute query JPQL
datasourceExecuteNativeQuery=Open database native query
datasourceExecuteNativeQueryUpdate=Open database native query for update
datasourceExecuteQuery=Open query datasource JPQL
datasourceGetActiveData=Get object from data source
datasourceGetColumnDescription=Function to get a data column. Example: A list of all e-mails from users
datasourceGetColumnName=Get data column
datasourceGetField=Get field
datasourceHasData=Has data
datasourceInsert=Insert
datasourceNext=Next
datasourceQuery=Open query database
datasourceRemove=Remove
datasourceUpdateField=Update field
date=Date
DATE=Date
DateFormat=MM/dd/yyyy
DATETIME=Date and Time
DateTimeFormat=MM/dd/yyyy HH:mm:ss
day=Day
daysToIncrement=Days to increase
decodeZipFromByteDescription=Function that descompress from zip to byte array
decodeZipFromByteName=Descompress a byte array
decodeZipFromByteParam0=descompress variable: Variable to be descompress
deleteFTPFile=Delete FTP file
deleteFTPFolder=Delete FTP folder
deleteObjectFromJson=Remove Json value
deleteObjectFromJsonDescription= Function that remove a Json value. Example: Remove 'a'. Before: {a:5,b:3}. After: {b:3}.
description=Description
destinationFolder=Destination Folder. Complete folder path. Example: /MyFolder/
destinationPath=Destination Path
directories=Folder
DOUBLE=Num√©ric
downloadFileFromFTP=Download file from FTP
downloadFileFromUrl=Download file from URL
downloadUrltoFile=Download from an URL to a file
email=E-mail
encryptPasswordDescription=Function that receive a password and encrypt using BCryptPasswordEncoder
encryptPasswordName=Encrypt password
encryptPasswordParam0=Password:Password to be encrypted
entity=Entity
errorDELETEType=removing
errorDownloadFile=Error downloading file
errorNotSpecified=Error not specified
errorPOSTType=including
errorPUTType=updating
exceptionToBeThrow=Thrown exception: Exception to be raised (Object of the exception or description itself)
executeAsync=Executing asynchronous 
executeAsyncDescription=Function to execute asynchronous commands.
executeProcedureReturnTable=Execute procedure returning data
executeProcedureReturnTableDescription=Run a procedure that returns a list of data
executeProcedureWithInOut=Execute procedure with IN and/or OUT
executeProcedureWithInOutDescription=Run a procedure that contains IN and/or OUT parameters 
expFunctionDescription=Function that return the logarithmic value in base 10
expFunctionName=Return the logarithm value in base 10
expFunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value in base 10
extractTextWithRegex=Extract text with Reg. Expression
extractTextWithRegexDescription=Function to extract text with Reg. Expression. Returns a list with incidences, if found
fieldName=Field name
fieldpath=The field was not found in the table.
fieldValue=Field value
file=File
fileDownloadDescription=Function that opens the process of downloading the parameter file to the user
fileDownloadName=Start file download
fileDownloadParam0=File: File that will be downloaded
fileDownloadParam1=Name: Name to give to the file to be downloaded
fileExists=Is there a file?
fileExtension=File Extension
fileExtensionWithDot=File extenstion: File extension with dot. Example: .html or .txt or .extension
fileList=File list
fileName=File Name
fileNameToZip=Zip file 
filePathToSaveURL=File: Full path to the file that will receive the data. If it exists, it will be deleted before downloading.
files=File
fileSeparatorDescription=Function that return a file separator according to operation system. Example: '/'
fileSeparatorName=File separator
fileToDownloadFTPPath=FTP download path:FTP download path file
fileUrl=File Url
FINE=Fine
FINER=Finer
FINEST=Finest
FirebaseBody=Body : A Json object for send on body.
FirebaseData=Data
firebaseRegister= Register token(s) on topic
firebaseRegisterDescription=Function that register a token(ns) on topic. Could receive a single token or a list of tokens.
firebaseSendNotification=Send notification
firebaseSendNotificationDescription=Function that sends notification to a mobile device using FCM (Firebase Cloud Message).
firebaseSendRawNotification= Send Raw notification
firebaseSendRawNotificationDescription= Function that send a raw notification.
firebaseServerKey=Firebase server key
FirebaseServerKey=Server Key
FirebaseSubtitle=Subtitle
FirebaseTitle=Title
FirebaseTo=Addressee
firebaseToken= Token(s): Token(ns) to be added on topic. Could be a single token os a list of tokens.
firebaseTopicName=Topic name: Topic name. Example: 'chat'
flag=Flag
flagRegexError=Invalid flag
flags=Flags
floorFunctionDescription=Function that return the larger round value
floorFunctionName=Return the larger round value
floorFunctionParam0=Value to round: Value base to round up
flushTransaction=Flush Transaction
flushTransactionDescription=Function to flush transaction.
folder=Folder
folderName=Folder name: Example: MyFolder
folderPathToSaveFile=Folder to save: A complete folder path to save the file. Example: /MyFolder/
foreignKeyError=Error while {0}, make sure item is not being used elsewhere
formatDateTime=Format date
formatDateTimeWithTimeZone=Format date with timezone
formatDouble=Format Double
forRecipient=to recipient (to)
ftpConnectionObj=FTP connection returned: FTP connection returned from "Open FTP connection"
ftpServerRefusedConnection=FTP server refused connection
functionConvertBase64ToText=Function to convert base64 to text
functionConvertToLogic=Function to converter to logical
functionDownloadUrltoFile=Download an url to a file passed as a parameter
functionformatDouble=Function that format a double. Mask example: 0.0000
functionToAddContentToFile=Function to add content to file
functionToCallBlockly= Function to call a blocky
functionToChangeFTPFolder=Function to change FTP folder
functionToChangeToParentFTPFolder=Function to change to parent FTP folder
functionToCheckIfCanReadFile=Function to check if you can read the file
functionToCheckIfCanWriteFile=Function to check if you can write the file
functionToCheckIfExistFile=Function to check if the file exists. Return true if exists, else return false
functionToCheckIsEndOfFile=Function to check if the read of file are in end of file
functionToCheckIsFolder=Function check if it is folder. Return true if a path passed on parameter is a folder, else, return false
functionToClearFile=Function to clean file. This function receive a file and clean, or flush, the content, making a empty file.
functionToCloseAndCleanDatasource=Function that clean all data to free up allocated memory
functionToCloseFile=Function to close the file. When a file is openned to write, others cannot open the file to write, only read.
functionToCloseFTPConnection=Function to close FTP connection
functionToConvertArrayToList=Function to convert array to list 
functionToConvertBase64ToBinary=Function to convert base64 to binary
functionToConvertDecToHex=Function to convert decimal to hexadecimal
functionToConvertHexadecimalToInt=Function to convert hexadecimal to integer
functionToConvertStringToDate=Function to convert text to data
functionToConvertStringToJs=Function to convert text to escaped text in javascript
functionToConvertTextBinaryToText=Function to binary text to text converter
functionToConvertTextInTextBinary=Function to text to binary text converter
functionToConvertToAscii=Function to convert char to ASCII code
functionToConvertToDouble=Function that convert the content to a Double value
functionToConvertToLong=Function to convert to long
functionToConvertToString=Function to convert to text
functionToCopyFile=Function to copy the file to source path to destination path
functionToCreateFile=Function to create file
functionToCreateNewFolder=Function to create new folder. Example: /PATH/FOLDER_NAME
functionToCreateNewFTPFolder=Function to create new FTP folder
functionToCreateObjectJson=Function to create Json object
functionToCreateObjectMap=Function to create Map object
functionToCreateRecipientsAddress=Function to create recipients, if you need to pass more than 1 email, it is necessary to separate by comma (,)
functionToDatasourceGetActiveData=Function to get object from data source
functionToDeleteFTPFile=Function to delete FTP file
functionToDeleteFTPFolder=Function to delete FTP folder
functionToDownloadFileFromFTP=Function to download file from FTP
functionToDownloadFileFromUrl=Function to download file from URL and save a content in a file
functionToExecuteNativeQuery=Function to retrieve data from database using native query
functionToExecuteNativeQueryUpdate=Function to update data from database using native query
functionToExecuteQuery=Function excute query JPQL 
functionToFormatDateTime=Function to format date
functionToGetCurrentWorkingDirectoryFTP=Function to get current working directory FTP
functionToGetDayFromDate=Function to get date day
functionToGetDayOfWeek=Function to get day of week from date
functionToGetDaysBetweenDates=Function to get total days between dates
functionToGetFieldOfCurrentCursorInDatasource=Function that retrieve the field of current data
functionToGetHourFromDate=Function to get date time
functionToGetHoursBetweenDates=Function to get total hours between dates
functionToGetJsonOrMapField=Function to get Json field
functionToGetLastDayFromMonth=Function to get last day from month
functionToGetMD5OfFile=Function to get MD5 from file
functionToGetMinuteFromDate=Function to get minute of date
functionToGetMinutesBetweenDates=Function to get total minutes between dates
functionToGetMonthFromDate=Function to get date month
functionToGetMonthsBetweenDates=Function to get total of months between dates
functionToGetNow=Function to get current date and time
functionToGetNowNoHour=Function to get current date with no hour
functionToGetParentOfFile=Function to get the parent path. Example: /MyFolder/MyFile.txt return /MyFolder/
functionToGetSecondFromDate=Function to get date second
functionToGetSecondsBetweenDates=Function to get total seconds between dates
functionToGetSizeOfFile=File size: Function to get the total file size. Example: A file with 4906 bytes will return 4096.
functionToGetTotalLinesFile=Function to get the total rows from the file. Example: A text file with five lines will return five.
functionToGetYearFromDate=Function to get date year
functionToGetYearsBetweenDates=Function to get total of years between dates
functionToIncDay=Function to increment day on date
functionToIncHour=Function to increment hour on date
functionToIncMinute=Function to increment minute on date
functionToIncMonth=Function to increment month on date
functionToIncSecond=Function to increment second on date
functionToIncYear=Function to increase data
functionToInsertObjectInDatasource=Function that insert a new data in database
functionToJson=Function to convert Text or File to Json
functionToList=Function to convert Text or File to List
functionToListFTPFiles=Function to list files from FTP
functionToListFTPFilesFromFolder=Function to list files in the FTP folder
functionToMap=Function to convert Text or File to Map
functionToMoveCursorToNextPosition=Function that moves cursor to next position
functionToMoveFile=Function to move file from a fully source path to a fully destination path
functionToNewDate=Function to create new date
functionToOpenFileToRead=Function to open file to reading. This function is used to get a file reference openned to be read.
functionToOpenFileToWrite=Function to open file to writing. This function is used to get a file reference openned to be written, and can add a content in this file.
functionToOpenFTPConnection=Function to open FTP connection
functionToQueryInDatasource=Function to retrieve data from database
functionToReadAllContentFileInBytes=Function to read entire contents of the file in bytes and return a byte array with content
functionToReadAllContentOfFile=Function that return a String with all content of readed file.
functionToReadAllFileWithCharset=Function to read entire file by defining charset. Default charset is UTF-8
functionToReadContentOfFile=Function to read file contents with size in bytes indicated at parameter.
functionToReadLineOfFile=Function to read file line, which every line is stored on a variable assigned into "return", and the statements are executed by each line readed. Example: A text file with five lines, the statements will be executed five times.
functionToRemoveFile=Function to remove file, return true if succes, else return false
functionToRemoveFolderFiles=Function to remove files folder
functionToRemoveObject=Function that removes data from database
functionToRemoveObjectInDatasource=Function that removes current data from database
functionToRenameFile=Function to rename file. Example: /MyFolder/OldFile.txt is renamed to /MyFolder/NewFile.txt
functionToReturnApplicationFolder=Function to return the path of application folder. This folder is the same folder of project tree, and exists merely to facilitate the use with files.
functionToReturnApplicationRecycleFolder=Function to return the path of application recycle folder. This folder has its files deleted every 10 minutes.
functionToReturnApplicationTemporaryFolder=Function to return the path of temporary folder. This folder exists merely when application is being executed, in this way, just save temporary files in this folder.
functionToReturnMD5OfFile=Function to return the MD5 from a file
functionToReturnMD5OfVar=Function do return MD5 from a string or byte array
functionToSendEmailSmtp=Function to send mail using SMTP
functionToSendEmailSmtpWithDigitalCertificate=Function to send mail using SMTP and digital certificate
functionToSendFTPCommand=Function to send FTP command
functionToSetJsonOrMapField=Function to set value in Json
functionToSetPassiveModeFTP=Function to set FTP connection to passive mode
functionToSleep=Function to make the sleeping process
functionToThrowException=Exception handling function
functionToUnZipFile=Function to unzip file
functionToUpdateDate=Function to update an date
functionToUpdateFieldInDatasource=Function that update field in current data
functionToUpdateObjectInDatasource=Function that update a new data in database
functionToUploadFileToFTP=Function to upload file to FTP
functionToVerifyDataInCurrentPosition=Function that checks data in current position
functionToZipFile=Function to zip file
generateKeys=Generate Keys
generateKeysDescription=Generates public and private keys
generateReport=Generate report
generateReportDescription=Function to generate report file in the desired folder.
generateUUIDDescription=Function that generate an universal identifier (UUID) and return as String
generateUUIDName= Generate universal identifier
getCountTotalElementsDescription=Function that get the number of records from datasource with applied filters
getCountTotalElementsName=Number of records
getCurrentUserName=Get current user name
getCurrentUserNameDescription=Function that get current user name
getCurrentWorkingDirectoryFTP=Get current working directory FTP
getDayFromDate=Get date day
getDayOfWeek=Get day of week from date
getDaysBetweenDates=Get days total between dates
getFileExtension=Get File Extension
getFileExtensionDescription=Get file extension of a given file
getFileName=Get file name
getFileNameDescription=Get file name of a given path
getFileParent=Get parent folder
getFileParentDescription=Get a parent folder of a given file
getFromSession=Get value in session
getFromSessionDescription=Function that get value from session by name
getHeader=Get param from request
getHeaderDescription=Function to get param from request
getHeadersFromExternalURL=Get URL headers
getHeadersFromExternalURLDescription=Function that do a request into a URL and get the headers result
getHourFromDate=Get date time
getHoursBetweenDates=Get hours total between dates
getJsonOrMapField=Get Json field
getLastDayFromMonth=Get last day from month
getMapFieldDescription=Function to get a map field by a path
getMapFieldDescriptions=Function to get a map field by a map key
getMapFieldName=Get map field by path
getMapFieldNames=Get map field by Key
getMapFieldParam0=Map
getMapFieldParam1=Path to move: Example: state[3].uf
getMapFieldParams1=Key: Key to search in Map
getMD5OfFile=Get MD5 from file
getMinuteFromDate=Get date minute
getMinutesBetweenDates=Get minutes total between dates
getMonthFromDate=Get date month
getMonthsBetweenDates=Get total of months between dates
getNow=Get current date and time
getNowInMilliseconds=Get current date and time in milliseconds 
getNowInMillisecondsDescription=Function that get a current date and time in milliseconds
getNowNoHour=Get current date with no hours
getObjectFieldDescription=Function to get a field object
getObjectFieldName=Get field on
getObjectFieldParam0=Map
getObjectFieldParam1=Path to move: Example: state[3].uf
getParam=Get param from request
getParamDescription=Function to get param from request
getParamFromQueryString=Get parameter from query string
getParentOfFile=Get above directory path
getSecondFromDate=Get date second
getSecondsBetweenDates=Get seconds total between dates
getSystemParam=Get System Parameter
getSystemParamKey=Parameter Key
getSystemProfile=Get System Profile
getToken=Get token from request
getTokenDescription=Function to get token from request
getURLFromOthersDescription=Function that do a request into a URL and get the content result
getURLFromOthersName=Get URL content
getUserRoles= Get user roles.
getUserRolesDescription= Function that list all roles.
getValueOfFieldDescription=Function that get field value
getValueOfFieldName=Get field value
getValueOfFieldParam0=Field
getYearFromDate=Get date year
getYearsBetweenDates=Get total of years between dates
goldenRatioFunctionDescription=Function that return the golden ratio constant
goldenRatioFunctionName=Return the the golden ratio constant
hiddenCopyToRecipient=Blind carbon copy: Copy hidden to recipient (bcc)
hostAddress=Server address
hostPort=Server port
hour=Hour
HOURS=Hours
hoursToIncrement=Hours to increase
HTTPDelete=DELETE
HTTPGet=GET
HTTPMethod=Request method
HTTPPost=POST
HTTPPut=PUT
incDay=Increase day on date
incHour=Increase hour on date
incMinute=Increase minute on date
incMonth=Increase month on date
incSecond=Increase second on date
incYear=Increase year on date
infinityFunctionDescription=Function that return the infinite positive value
infinityFunctionName=Return the infinite positive value
INFO=Info
initialTime=Initial time
INTEGER=Integer
isBinaryFile=Binary file?
isDivisibleByFunctionDescription=Function that return true if a the there is not rest of division from first parameter on second parameter
isDivisibleByFunctionName=Return true if a the there is not rest of division from first parameter on second parameter
isDivisibleByFunctionParam0=Dividend
isDivisibleByFunctionParam1=Divider
isEmptyDescription=Function that check if a variable is empty.
isEmptyName=is empty?
isEmptyParam0=Variable: Variable to be checked;
isEndOfFile=Is it end of file?
isEvenFunctionDescription=Function that return true if is a even number, else return false
isEvenFunctionName=Return true if is a even number, else return false
isEvenFunctionParam0=Value to check: Value to check if is a even number
isFile=Is it file?
isFolder=Is it folder?
isHtml=Is it html?
isIntFunctionDescription=Function that return true if is a integer number, else return false
isIntFunctionName=Return true if is a integer number, else return false
isIntFunctionParam0=Value to check: Value to check if is a integer number
isNegativeFunctionDescription=Function that return true if is a negative number, else return false
isNegativeFunctionName=Return true if is a negative number, else return false
isNegativeFunctionParam0=Value to check: Value to check if is a negative number
isNullDescription=Function that check if a variable is null.
isNullName=is null?
isNullOrEmptyDescription=Function that check if a variable is null or empty.
isNullOrEmptyName=is null or empty?
isNullOrEmptyParam0=Variable: Variable to be checked;
isNullParam0=Variable: Variable to be checked;
ISODATE=ISO date
isOddFunctionDescription=Function that return true if is a odd number, else return false
isOddFunctionName=Return true if is a odd number, else return false
isOddFunctionParam0=Value to check: Value to check if is a odd number
isPositiveFunctionDescription=Function that return true if is a positive number, else return false
isPositiveFunctionName=Return true if is a positive number, else return false
isPositiveFunctionParam0=Value to check: Value to check if is a positive number
isPrimeFunctionDescription=Function that return true if is a prime number, else return false
isPrimeFunctionName=Return true if is a prime number, else return false
isPrimeFunctionParam0=Value to check: Value to check if is a prime number
JSON=Json
JSONtoList=JSON to list
JSONToXML=Convert JSON to XML
JSONToXMLDescription=Function that convert a xml string into JSON object
JSONTOXMLValueToBeRead=Value to be read: Text or File (Return from the "Open file to read" function)
keyJks=Certificate key: Digital certificate key
keyJksPassword=Key password: Digital certificate key password
largerDateToBeSubtracted=Biggest date: Larger date to be subtracted
LIST=Lista
listFilesDescription= Function that list files from a path
listFilesName= Get file list
listFilesParam0= File path: File path to list files. Example: /MyFolder/MyFile.txt or /MyFolder/
listFilesParam1= Type: Type to list files. All: List files and directories. Directory: List only the directories. Files: List only files, without directories.
listFTPFiles=List files from FTP
listFTPFilesFromFolder=List files in the FTP folder
loadPrivateKey=Load private key
loadPrivateKeyDescription=Loads the private key value from file
loadPublicKey=Load public key
loadPublicKeyDescription=Loads the public key value from a file
location=Location
log10FunctionDescription=Function that return the logarithmic value in base 10
log10FunctionName=Return the logarithm value in base 10
log10FunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value in base 10
log=Log
logCategory=Category: Reference key of this log message. This is usually the name of the block.
logDescription=Logs application messages according to configuration. By default, logs into console output.
logDetail=Log Detail: Can be a text or an exception object (error).
logFunctionDescription=Function that return the logarithmic value
logFunctionName=Return the logarithm value
logFunctionParam0=Value to be calculate: Value base to be calculate the logarithmic value
login=Login
loginPasswordInvalid=Login or password invalid
logLevel=Log Level: This is the log level that will be logged. If it is below the settings, the system will not log in.
logMessage=Log Message: Text You Want to Log.
LONG=Long
MAP=Map
mapOrJsonVar=Json
MapToJson=Map to JSON
MapToList=Map to list
mask=Mask
maskFormat=Mask: Mask. Ex: dd/MM/yyyy HH:mm:ss, DateTimeFormat, DateFormat
matchesencryptPasswordDescription=Function that verify a decrypted password with a crypted password
matchesencryptPasswordName=Verify encrypted password
matchesencryptPasswordParam0=Decrypted password
matchesencryptPasswordParam1=Encrypted password
MathEFunctionDescription=Function that return the constant E
MathEFunctionName=Return the constant E
MATHPOWBASE=Base
MATHPOWDESCRIPTION=A number representing the given base taken to the power of the given exponent.
MATHPOWEXPONENT=Exponent
MATHTHEPOW=Function Pow
MD5OfFile=MD5 from file
MD5OfVar=MD5 from string
MD5OfVarParam0=String or bytes
methodNotFound=Function not found
millisecond=Millisecond
MILLISECONDS=Milliseconds
minSize=Minimum size
minute=Minute
MINUTES=Minutes
minutesToIncrement=Minutes to increase
month=Month
monthsToIncrement=Months to increase
moveFile=Move File
multiplyDoubleDescription=Function that return the multiplied value from params
multiplyDoubleName=Return the values multiplied
multiplyDoubleParam0=Variables to multiply
multiplyFunctionDescription=Function that return the multiplied value from params
multiplyFunctionName=Return the values multiplied
multiplyFunctionParam0=Variables to multiply
multiplyLongDescription=Function that return the multiplied value from params
multiplyLongName=Return the values multiplied
multiplyLongParam0=Variables to multiply
name=Name
nameOfFile=Filename
nameOfFileFromURL=Filename: Filename from a file without extenstion. Example: MyFile
namespace=Namespace
negFunctionDescription=Function that return the value be multiplied by -1
negFunctionName=Return the value be multiplied by -1
negFunctionParam0=Value to invert: Value base to be multiplied by -1
newDate=New date
newEntity=Create new Entity
newEntityDescription=Function that create new entity 
newline=Newline
newlineDescription=Function that returns a newline '\\n'
newNameOfFile=New name: New file name
newObject=Create new object
newObjectDescription=Function that create new object 
newXMLEmptyDescription=Function that create a XML
newXMLEmptyName=Create XML
newXMLEmptyParam0=Root element: Root element to append in XML
no=No
nonNormalizedText=Non normalized text
notAllowed=Not authorized
NotModifiable=Value cannot be modified
object=Object
ObjectType.BOOLEAN=Boolean
ObjectType.DATASET=DataSet
ObjectType.DATETIME=DateTime
ObjectType.DOUBLE=Double
ObjectType.JSON=Json
ObjectType.LIST=List
ObjectType.LONG=Long
ObjectType.MAP=Map
ObjectType.OBJECT=Object
ObjectType.STRING=String
ObjectType.UNKNOWN=Unknown
ObjectType.VOID=Void
ObjectType.XML=Xml
openFileToRead=Open file to reading
openFileToWrite=Open file to writing
openFTPConnection=Open FTP connection
optimisticLockingError=Cannot be updated because it has changed or been deleted since it was last read. Please, input the correct version and try again.
parameter=Parameter
parameterList=Parameter list
parameterMap=Parameter Map
parameterNotBinary=Parameter is not binary
params= Parameters: Parameters to be passed
paramsHTTP=Parameters: Paramters to be passed, if URL_ENCODED, pass a map, if JSON, pass JSON
paramsInsertTuples=Insert¬¥s params
paramsQueryTuples=Query params
paramteterListModes=List of modes types
paramteterListTypes=List of parameter types
ParseDateFormat=M/d/yyyy
password=Password
path=Path
pathKey=Path to go: Example: state[3].uf
pathMustBeCreatedForFolder=Folder path: Path to create folder. Example: TEMP_FOLDER/
pathOfDestinationFile=Destination path: Fully File destination path. Example: /MyFolder/MyFile.txt
pathOfFile=Path of the file: Example: TEMPORARY_FOLDER/myFile.txt
pathOfFolder=Folder path: Example TEMPORARY_FOLDER/myFolderName
pathOfFolderFTP=FTP path: Folder path FTP
pathOfSourceFile=Destination: Fully File source path. Example: /MyFolder/MyFile.txt
PIFunctionDescription=Function that return the PI value in double
PIFunctionName=Return the PI value
polarArea=Polar Area
postData=Data to post: Data to be passed in requisition,  if URL_ENCODED, pass a map, if JSON, pass JSON
powFunctionDescription=Function that return the value of first parameter raised to second parameter
powFunctionName=Return the value of first parameter raised to second parameter
powFunctionParam0=Value base: Value base to be calculate the exponencial
powFunctionParam1=Value to be raised: Value to be raised from first parameter
prefixStartsWith=Prefix
primaryKeyError=Error while {0}, make sure item is not duplicate
privateKey=Private Key
privateKeyFile=Private key file
procedureName=Procedure name
protocolToSendEmail=Sending protocol: Protocol to sending e-mail (TLS, SSL or none)
publicKey=Public Key
publicKeyFile=Public key file
query=Query
queryNotFound=Query not allowed
randomDescription=Function that return a random positive integer with maximum value defined by parameter
randomName=Randomize number
randomParam0=Max value: Variable that define the maximum value to function
readAllContentFileInBytes=Read all file contents in bytes
readAllContentOfFile=Read all file contents
readAllFileWithCharset=Read entire file by setting charset
readBytesFromStreamDescription=Function that read a file content in bytes, each read is stored in variable assigned in "Return", and the statements are executed in each read. Example: A file with 4096 bytes with a read size of 1024 bytes will be readed four times.
readBytesFromStreamName=Read file content in bytes
readBytesFromStreamParam0=Openned file to read: Return of function "Open file to read"
readBytesFromStreamParam1=Size: Size of bytes to be readed, default value is 1025 bytes
readContentOfFile=Read file contents
readLineOfFile=Read file line
redirect=Redirect
redirectDescription=Function to redirect to location
regex=Regular Expression
removeFile=Remove file
removeFolderFiles=Remove files folder
renameFile=Rename file
report=Report
return=Return
returnClass=Return class
rollbackTransaction=Rollback Transaction
rollbackTransactionDescription=Function to rollback transaction.
rootFunctionDescription=Function that return the square root value
rootFunctionName=Return the square root value
rootFunctionParam0=Value to be calculate: Value Base to be calculate the square root value
roundFunctionDescription=Function that return the round value
roundFunctionName=Return the round value
roundFunctionParam0=Value to round: Value base to round
saveFileInPath=Save path: Save file in path
scheduleExecution=Schedule execution
scheduleExecutionDescription=Function to schedule execution of a routine.
second=Second
SECONDS=Seconds
secondsToIncrement=Seconds to increase
sendEmailDescription=Function that send a e-mail
sendEmailName=Send e-mail
sendEmailParam0=From
sendEmailParam10=Login: Login to autenticate on SMTP host
sendEmailParam11=Password: Password to autenticate on SMTP host
sendEmailParam12=Protocol:Protocol for sending email through SMTP.
sendEmailParam1=To: Can receive a single text or a text list
sendEmailParam2=Copy to: Can receive a single text or a text list
sendEmailParam3=Blind Copy to :Can receive a single text or a text list
sendEmailParam4=Subject
sendEmailParam5=Message
sendEmailParam6=HTML content:Send a message with the HTML content
sendEmailParam7=Attachment(s): Absolute path of attachment, or a list with absolute paths
sendEmailParam8=SMTP Host
sendEmailParam9=SMTP Port
sendEmailSmtp=Send mail using SMTP
sendEmailSmtpWithDigitalCertificate=Send mail using SMTP and digital certificate
senderMail=Sender email
sendFTPCommand=Send FTP command
setInSession=Add or set value in session
setInSessionDescription=Put or set value in session by name
setJsonOrMapField=Set value in Json
setMapFieldByKeyDescription=Function that define a field value on map by a key
setMapFieldByKeyName= Set a value on map by key
setMapFieldByKeyParam0=Map
setMapFieldByKeyParam1=Key: Key to search on map. Example: mykey
setMapFieldByKeyParam2=Value: Value to be defined in map
setMapFieldDescription=Function to set a field map
setMapFieldName= Set field on map
setMapFieldParam0=Map
setMapFieldParam1=Path to move: Example: state[3].uf
setMapFieldParam2=Value to be setted on object
setObjectFieldDescription=Function to set a field object
setObjectFieldName= Set field on 
setObjectFieldParam0=Object
setObjectFieldParam1=Path to move: Example: state[3].uf
setObjectFieldParam2=Value to be setted on object
setPassiveModeFTP=Set FTP connection to passive mode
setReturn=Return
setReturnDescription=Function to include a "return" in the code.
SEVERE=Severe
shellExecuteDescription=Function that execute a command line and return error (if exists)
shellExecuteName=Execute a command line
shellExecuteParam0=Variable executed
shellExecuteParam1=Error detect: Variable that defines if errors will be returned
signedObject=Signed Object
signFile=Sign file
signFileDescription=Signs the file to guarantee the authenticity
sinFunctionDescription=Function that return the sine value
sinFunctionName=Return the sine value
sinFunctionParam0=Value to calculate: Value base to calculate the sine
size=Size
sizeInBytes=Size in bytes to read from a openned file
sizeOfFile=File size
sleep=Sleep
smallerDateToBeSubtracted=Minor date: Minor date to be subtracted
sourceFile=Source file
sourcePath=Source path: Full path to source file. Example: /MyFolder/myFile.txt
startDownload=Start download
startDownloadDescription=Function to start downloading a file, or array of bytes
startDownloadParam0=File/Path/Bytes: Data to be downloaded
startDownloadParam1=Name: Name that the download file should receive
streamOfFile=Open file to writing or reading: Return of the "Open file to read/write"
streamOfFileToRead=Open file to read: Return from "Open file to read"
streamOfFileToWrite=Open file to writing: Return of the function "Open file to writing"
STRING=String
subject=Subject
subtractDoubleDescription=Function that return the subtracted value from other values on first value
subtractDoubleName=Return the values subtracted
subtractDoubleParam0=Variables to subtracted
subtractFunctionDescription=Function that return the subtracted value from other values on first value
subtractFunctionName=Return the values subtracted
subtractFunctionParam0=Variables to subtracted
subtractLongDescription=Function that return the subtracted value from other values on first value
subtractLongName=Return the values subtracted
subtractLongParam0=Variables to subtracted
tanFunctionDescription=Function that return the tangent value
tanFunctionName=Return the tangent value
tanFunctionParam0=Value to calculate: Value base to calculate the tangent
text=Text
textBinaryToText=Binary text to text
textNormalizeDescription=Transforms the text allowing for easier sorting and searching of the text.
textNormalizeFunction=Normalize
TextOperationsDescription=Class responsible to managing texts
TextOperationsName=Constructor to class that manager texts
textReplace=Original text
textReplaceAllDescription=Overwriting all past texts
textReplaceAllFunction=Replace all
textReplaceDescription=Replaced the past text
textReplaceFirstDescription=Replaces an initial occurrence you find
textReplaceFirstFunction=Replace First
textReplaceFunction=Replace
textReplaceRegex=A RegExp or Text
textReplaceReplacement=New Text
textReplaceTarget=Text to be replaced
textStarts=Text
textStartsWithDescription=Tests if the specified text starts with the specified prefix.
textStartsWithFunction=Text starts with
TEXTTIME=Text Time
TextToBase64Description=Function that convert a text to a Base64 format
TextToBase64Name=Texto to Base64
TextToConvert=Text: Text to be converted
textToTextBinary=Text to binary text
throwException=Exception raise
TIME=Time
timeSleepInSecond=Waiting time: Number of seconds the process should sleep
timeUnit=Time Unit
timezone=Time Zone
timezoneFormat=Time Zone: Time Zone. Ex: -3, GMT-03:00 or America/Sao_Paulo
toFile=Get file name path
toFileDescription=Get a new File path from a parent pathname and a child pathname string. Ex: /opt/test, file.txt
toJson=to Json
toList=to List
toLogic=to logic 
toMap=to Map
toRecipientMail=Recipient: Email of recipient (return function to create destinations or comma-separated)
totalLinesFile=Total lines file
unZipFile=Unzip file
update=Update
updateDate=Update date
updateTime=Time to upgrade
uploadDescription=Function that upload files to server
uploadFileToFTP=Upload file to FTP
uploadName=Upload
uploadParam0=Filters: Allowed type files. Ex: image/*
uploadParam1=Maximum size: File maximum size (bytes), defalut is 20MB. Example: 20MB
uploadParam2=Multiples: Allow multiple files?
uploadParam3=After upload: Statements to be executed after an upload
uploadParam=Description: Upload window description
URLAddress=URL address: A complete URL addres. Example: https://www.cronapp.io
validateCNPJ=Validate CNPJ
validateCNPJDescription=Function to validate CNPJ.Returns true if the CPNJ is valid or false if it is invalid.
validateCPF=Validate CPF
validateCPFDescription=Function to validate CPF. Returns true if the CPF is valid or false if it is invalid.
validateEmail=Validate e-mail
validateEmailDescription=Function to validate e-mail.Returns true if the e-mail is valid or false if it is invalid.
validateTextWithRegex=Validate text with Reg. Expression
validateTextWithRegexDescription=Function to validate text with Reg. Expression. Returns true if it finds or false if it doesn't find the text
value=Value
valueToBeRead=Value to be read: Text or File (Return from the "Open file to read" function)
valueToBetSet=Value to be set in the object
verbNotAllowed=Operation %s not allowed
verifySignature=Verify signature
verifySignatureDescription=Verifies the signature of the file
WARNING=Warning
withDetail=With details?
x_www_form_urlencoded=x_www_form_urlencoded
XMLaddElementDescription=Function that add a XML element inside a parent element
XMLaddElementDescriptioon=Function that add a XML element on XML parent
XMLaddElementName=Add XML element
XMLaddElementParam0=Parent element
XMLaddElementParam1=Element to add
XMLChangeNodeNameDescription=Function that rename an element
XMLChangeNodeNameName=Rename element
XMLChangeNodeNameParam0=Element: Element object to rename
XMLChangeNodeNameParam1=Name: Element name
XMLcreateElementDescription=Function that create a XML element
XMLcreateElementName=Create a XML element
XMLcreateElementParam0=Element name
XMLcreateElementParam1=Content: Optional content to element
XMLDocumentToStringDescription=Function that receive a XML and return converted to text
XMLDocumentToStringName=Get XML in text format
XMLDocumentToStringParam0=XML
XMLElementToStringDescription=Function that convert a XML element to text
XMLElementToStringName=Get element in text format
XMLElementToStringParam0=Element: XML element to be converted
XMLGetAttributeDescription=Function that return the attribute value from the element
XMLGetAttributeName=Attribute value
XMLGetAttributeParam0=Element: Element to get que attribute value
XMLGetAttributeParam1=Search object: Attribute to get from element
XMLGetChildElementDescription=Function that return the children element from the element
XMLGetChildElementName=Get children elements
XMLGetChildElementParam0=Search base: Element  base from search
XMLGetChildElementParam1=Element searched: Child element to be searched 
XMLGetChildrenElementDescription=Function that return the children elements from a element
XMLGetElementAsXMLName=Return the element in xml format
XMLGetElementAsXMLNameDescription=Function that return the element in xml format
XMLGetElementAsXMLParam0=XML element: Element to get in xml format
XMLGetElementTagNameDescription=Function that return the element name
XMLGetElementTagNameName=Get the element name
XMLGetElementTagNameParam0=Search target: Element to get the name
XMLGetElementValueDescription=Function that return the element value
XMLGetElementValueName=Element value
XMLGetElementValueParam0=Searched element: Element to get the value
XMLGetParentElementDescription=Function that return the parent element from the element
XMLGetParentElementName=Get parent element
XMLGetParentElementParam0=Children element
XMLGetRootElementDescription=Function that receive a XML document or a XML element and return the root element.
XMLGetRootElementName=Get root element
XMLGetRootElementParam0=XML Document: XML Document or XML Element to get the root element
XMLHasRootElementDescription=Function that verify if exists a root element on XML document
XMLHasRootElementName=Has root element?
XMLHasRootElementParam0=XML Document: XML Document created by function Create XML
XMLOpenDescription=Function that return the xml builded from a name
XMLOpenFromFileDescription=Function that return a xml builted from a File object
XMLOpenFromFileName=Builted from a file
XMLOpenFromFileParam0=XML File path: Absolute file path to build xml 
XMLOpenFromString=Create XML from text
XMLOpenFromStringDescription=Function that create a XML from a text
XMLOpenFromStringParam0= Text
XMLOpenName=Build a new URL
XMLOpenParam0=XML Name: Name to create the xml
XMLRemoveElementDescription=Function that remove a element. Return true if success and else return false.
XMLRemoveElementName=Remove element
XMLRemoveElementParam0=Parent element: Element to search the element.
XMLRemoveElementParam1=Element to remove: Name or element object. If empty, remove all childrens.
XMLSetElementAttributeValueDescription=Function that set a content on element
XMLSetElementAttributeValueName=Set attribute value
XMLSetElementAttributeValueParam0= Element
XMLSetElementAttributeValueParam1= Insert attribute
XMLSetElementAttributeValueParam2= Value to insert
XMLSetElementValueDescription=Function that set a value on element
XMLSetElementValueName=Set element content
XMLSetElementValueParam0=Search target: Element to set the value
XMLSetElementValueParam1=Content to be setted on element
XMLToJSON=Convert XML to JSON
XMLToJSONDescription=Function that convert a xml string into JSON object
XpathCompileDescription=Function that return the children elements with same name.
XpathCompileName=Return the children elements with same name.
XpathCompileParam0=Serach Base: Element to search the children elements
XpathCompileParam1=Search target: Child element to search on element
year=Year
yearsToIncrement=Years an increment
yes=Yes
zipFile=Zip file